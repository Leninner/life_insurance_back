services:
  postgres:
    image: postgres:16-alpine
    container_name: life_insurance_postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-life-insurance}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - life_insurance_data:/var/lib/postgresql/data
    networks:
      - life_insurance_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-postgres}']
      interval: 5s
      timeout: 5s
      retries: 5

  sonarqube:
    image: sonarqube:latest
    container_name: life_insurance_sonarqube
    ports:
      - '${SONARQUBE_PORT:-9000}:9000'
    networks:
      - life_insurance_network
    environment:
      - SONARQUBE_JDBC_USERNAME=${SONARQUBE_JDBC_USERNAME:-sonar}
      - SONARQUBE_JDBC_PASSWORD=${SONARQUBE_JDBC_PASSWORD:-sonar}
      - SONARQUBE_JDBC_URL=${SONARQUBE_JDBC_URL:-jdbc:postgresql://postgres:5432/sonar}
    volumes:
      - life_insurance_sonarqube_data:/opt/sonarqube/data

  jenkins:
    image: jenkins/jenkins:latest
    container_name: jenkinsGPS
    ports:
      - '8181:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_data:/var/jenkins_home
    networks:
      - life_insurance_network
    user: root

volumes:
  life_insurance_data:
  life_insurance_sonarqube_data:
  jenkins_data:

networks:
  life_insurance_network:
    driver: bridge
